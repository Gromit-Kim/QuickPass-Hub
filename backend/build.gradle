plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
}

group = 'dev.syk.quickpasshub'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // === Spring Boot 기본 데이터 접근 / DB 관련 ===
    // JPA(Hibernate 포함) + DB 연동을 위한 스프링 부트 스타터
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // === GraphQL 관련 ===
	implementation 'org.springframework.boot:spring-boot-starter-graphql'

    // === 보안 관련 ===
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'


    // === 검증 관련 ===
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // === 웹 관련 ===
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // === Kotlin 지원 ===
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    // Kotlin data class를 Jackson으로 직렬화/역직렬화 지원
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // === Lombok ---
	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // === 개발 편의 ===
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // === PostgreSQL ===
	runtimeOnly 'org.postgresql:postgresql'


    // === Test ===
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}
